// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: protobuf/client.proto

package services

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName string `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Release  string `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
	Kernel   string `protobuf:"bytes,3,opt,name=kernel,proto3" json:"kernel,omitempty"`
}

func (x *System) Reset() {
	*x = System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System) ProtoMessage() {}

func (x *System) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System.ProtoReflect.Descriptor instead.
func (*System) Descriptor() ([]byte, []int) {
	return file_protobuf_client_proto_rawDescGZIP(), []int{0}
}

func (x *System) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *System) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *System) GetKernel() string {
	if x != nil {
		return x.Kernel
	}
	return ""
}

type CPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number    uint32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Core      uint32 `protobuf:"varint,2,opt,name=core,proto3" json:"core,omitempty"`
	Sibling   uint32 `protobuf:"varint,3,opt,name=sibling,proto3" json:"sibling,omitempty"`
	Processor uint32 `protobuf:"varint,4,opt,name=processor,proto3" json:"processor,omitempty"`
	ModelName string `protobuf:"bytes,5,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
}

func (x *CPU) Reset() {
	*x = CPU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPU) ProtoMessage() {}

func (x *CPU) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPU.ProtoReflect.Descriptor instead.
func (*CPU) Descriptor() ([]byte, []int) {
	return file_protobuf_client_proto_rawDescGZIP(), []int{1}
}

func (x *CPU) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CPU) GetCore() uint32 {
	if x != nil {
		return x.Core
	}
	return 0
}

func (x *CPU) GetSibling() uint32 {
	if x != nil {
		return x.Sibling
	}
	return 0
}

func (x *CPU) GetProcessor() uint32 {
	if x != nil {
		return x.Processor
	}
	return 0
}

func (x *CPU) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

type Memory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    uint64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Number   uint32 `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Slot     uint32 `protobuf:"varint,4,opt,name=slot,proto3" json:"slot,omitempty"`
	MaxSize  string `protobuf:"bytes,5,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	FreeSlot uint32 `protobuf:"varint,6,opt,name=free_slot,json=freeSlot,proto3" json:"free_slot,omitempty"`
}

func (x *Memory) Reset() {
	*x = Memory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Memory) ProtoMessage() {}

func (x *Memory) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Memory.ProtoReflect.Descriptor instead.
func (*Memory) Descriptor() ([]byte, []int) {
	return file_protobuf_client_proto_rawDescGZIP(), []int{2}
}

func (x *Memory) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Memory) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Memory) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Memory) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *Memory) GetMaxSize() string {
	if x != nil {
		return x.MaxSize
	}
	return ""
}

func (x *Memory) GetFreeSlot() uint32 {
	if x != nil {
		return x.FreeSlot
	}
	return 0
}

type MainBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber string `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Uuid         string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Manufacturer string `protobuf:"bytes,3,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	ProductName  string `protobuf:"bytes,4,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
}

func (x *MainBoard) Reset() {
	*x = MainBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainBoard) ProtoMessage() {}

func (x *MainBoard) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainBoard.ProtoReflect.Descriptor instead.
func (*MainBoard) Descriptor() ([]byte, []int) {
	return file_protobuf_client_proto_rawDescGZIP(), []int{3}
}

func (x *MainBoard) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *MainBoard) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MainBoard) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *MainBoard) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

type NICMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nic []*NICMany_NICOne `protobuf:"bytes,1,rep,name=nic,proto3" json:"nic,omitempty"`
}

func (x *NICMany) Reset() {
	*x = NICMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NICMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NICMany) ProtoMessage() {}

func (x *NICMany) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NICMany.ProtoReflect.Descriptor instead.
func (*NICMany) Descriptor() ([]byte, []int) {
	return file_protobuf_client_proto_rawDescGZIP(), []int{4}
}

func (x *NICMany) GetNic() []*NICMany_NICOne {
	if x != nil {
		return x.Nic
	}
	return nil
}

type DiskMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disk []*DiskManyDiskOne `protobuf:"bytes,1,rep,name=disk,proto3" json:"disk,omitempty"`
}

func (x *DiskMany) Reset() {
	*x = DiskMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskMany) ProtoMessage() {}

func (x *DiskMany) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskMany.ProtoReflect.Descriptor instead.
func (*DiskMany) Descriptor() ([]byte, []int) {
	return file_protobuf_client_proto_rawDescGZIP(), []int{5}
}

func (x *DiskMany) GetDisk() []*DiskManyDiskOne {
	if x != nil {
		return x.Disk
	}
	return nil
}

type RequestClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestClient) Reset() {
	*x = RequestClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestClient) ProtoMessage() {}

func (x *RequestClient) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestClient.ProtoReflect.Descriptor instead.
func (*RequestClient) Descriptor() ([]byte, []int) {
	return file_protobuf_client_proto_rawDescGZIP(), []int{6}
}

type NICMany_NICOne struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mac     string   `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	Address []string `protobuf:"bytes,3,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *NICMany_NICOne) Reset() {
	*x = NICMany_NICOne{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NICMany_NICOne) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NICMany_NICOne) ProtoMessage() {}

func (x *NICMany_NICOne) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NICMany_NICOne.ProtoReflect.Descriptor instead.
func (*NICMany_NICOne) Descriptor() ([]byte, []int) {
	return file_protobuf_client_proto_rawDescGZIP(), []int{4, 0}
}

func (x *NICMany_NICOne) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NICMany_NICOne) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *NICMany_NICOne) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

type DiskManyDiskOne struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SerialNumber string `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	ProductName  string `protobuf:"bytes,3,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	Size         uint64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	FormFactor   string `protobuf:"bytes,5,opt,name=form_factor,json=formFactor,proto3" json:"form_factor,omitempty"`
}

func (x *DiskManyDiskOne) Reset() {
	*x = DiskManyDiskOne{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskManyDiskOne) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskManyDiskOne) ProtoMessage() {}

func (x *DiskManyDiskOne) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskManyDiskOne.ProtoReflect.Descriptor instead.
func (*DiskManyDiskOne) Descriptor() ([]byte, []int) {
	return file_protobuf_client_proto_rawDescGZIP(), []int{5, 0}
}

func (x *DiskManyDiskOne) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiskManyDiskOne) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *DiskManyDiskOne) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *DiskManyDiskOne) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DiskManyDiskOne) GetFormFactor() string {
	if x != nil {
		return x.FormFactor
	}
	return ""
}

var File_protobuf_client_proto protoreflect.FileDescriptor

var file_protobuf_client_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22,
	0x57, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x22, 0x88, 0x01, 0x0a, 0x03, 0x43, 0x50, 0x55,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73,
	0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0x8b, 0x01, 0x0a,
	0x09, 0x4d, 0x61, 0x69, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x07, 0x4e, 0x49,
	0x43, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x28, 0x0a, 0x03, 0x6e, 0x69, 0x63, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x49, 0x43, 0x4d,
	0x61, 0x6e, 0x79, 0x2e, 0x4e, 0x49, 0x43, 0x4f, 0x6e, 0x65, 0x52, 0x03, 0x6e, 0x69, 0x63, 0x1a,
	0x48, 0x0a, 0x06, 0x4e, 0x49, 0x43, 0x4f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x08, 0x44, 0x69,
	0x73, 0x6b, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69,
	0x73, 0x6b, 0x4d, 0x61, 0x6e, 0x79, 0x2e, 0x64, 0x69, 0x73, 0x6b, 0x4f, 0x6e, 0x65, 0x52, 0x04,
	0x64, 0x69, 0x73, 0x6b, 0x1a, 0x9a, 0x01, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x6b, 0x4f, 0x6e, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x32, 0xbe, 0x02, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x15, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x1a, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x2c, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x43, 0x50, 0x55, 0x12, 0x15, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x50, 0x55, 0x12,
	0x32, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x15, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x1a, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x11, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x30, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x4e, 0x49, 0x43, 0x12, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x0f,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x49, 0x43, 0x4d, 0x61, 0x6e, 0x79, 0x12,
	0x32, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x15, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x1a, 0x10, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x4d,
	0x61, 0x6e, 0x79, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_client_proto_rawDescOnce sync.Once
	file_protobuf_client_proto_rawDescData = file_protobuf_client_proto_rawDesc
)

func file_protobuf_client_proto_rawDescGZIP() []byte {
	file_protobuf_client_proto_rawDescOnce.Do(func() {
		file_protobuf_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_client_proto_rawDescData)
	})
	return file_protobuf_client_proto_rawDescData
}

var file_protobuf_client_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_protobuf_client_proto_goTypes = []interface{}{
	(*System)(nil),          // 0: client.System
	(*CPU)(nil),             // 1: client.CPU
	(*Memory)(nil),          // 2: client.Memory
	(*MainBoard)(nil),       // 3: client.MainBoard
	(*NICMany)(nil),         // 4: client.NICMany
	(*DiskMany)(nil),        // 5: client.DiskMany
	(*RequestClient)(nil),   // 6: client.RequestClient
	(*NICMany_NICOne)(nil),  // 7: client.NICMany.NICOne
	(*DiskManyDiskOne)(nil), // 8: client.DiskMany.diskOne
}
var file_protobuf_client_proto_depIdxs = []int32{
	7, // 0: client.NICMany.nic:type_name -> client.NICMany.NICOne
	8, // 1: client.DiskMany.disk:type_name -> client.DiskMany.diskOne
	6, // 2: client.Client.GetSystem:input_type -> client.RequestClient
	6, // 3: client.Client.GetCPU:input_type -> client.RequestClient
	6, // 4: client.Client.GetMemory:input_type -> client.RequestClient
	6, // 5: client.Client.GetMainBoard:input_type -> client.RequestClient
	6, // 6: client.Client.GetNIC:input_type -> client.RequestClient
	6, // 7: client.Client.GetDisk:input_type -> client.RequestClient
	0, // 8: client.Client.GetSystem:output_type -> client.System
	1, // 9: client.Client.GetCPU:output_type -> client.CPU
	2, // 10: client.Client.GetMemory:output_type -> client.Memory
	3, // 11: client.Client.GetMainBoard:output_type -> client.MainBoard
	4, // 12: client.Client.GetNIC:output_type -> client.NICMany
	5, // 13: client.Client.GetDisk:output_type -> client.DiskMany
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_protobuf_client_proto_init() }
func file_protobuf_client_proto_init() {
	if File_protobuf_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Memory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NICMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NICMany_NICOne); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskManyDiskOne); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_client_proto_goTypes,
		DependencyIndexes: file_protobuf_client_proto_depIdxs,
		MessageInfos:      file_protobuf_client_proto_msgTypes,
	}.Build()
	File_protobuf_client_proto = out.File
	file_protobuf_client_proto_rawDesc = nil
	file_protobuf_client_proto_goTypes = nil
	file_protobuf_client_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClientClient is the client API for Client service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientClient interface {
	GetSystem(ctx context.Context, in *RequestClient, opts ...grpc.CallOption) (*System, error)
	GetCPU(ctx context.Context, in *RequestClient, opts ...grpc.CallOption) (*CPU, error)
	GetMemory(ctx context.Context, in *RequestClient, opts ...grpc.CallOption) (*Memory, error)
	GetMainBoard(ctx context.Context, in *RequestClient, opts ...grpc.CallOption) (*MainBoard, error)
	GetNIC(ctx context.Context, in *RequestClient, opts ...grpc.CallOption) (*NICMany, error)
	GetDisk(ctx context.Context, in *RequestClient, opts ...grpc.CallOption) (*DiskMany, error)
}

type clientClient struct {
	cc grpc.ClientConnInterface
}

func NewClientClient(cc grpc.ClientConnInterface) ClientClient {
	return &clientClient{cc}
}

func (c *clientClient) GetSystem(ctx context.Context, in *RequestClient, opts ...grpc.CallOption) (*System, error) {
	out := new(System)
	err := c.cc.Invoke(ctx, "/client.Client/GetSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientClient) GetCPU(ctx context.Context, in *RequestClient, opts ...grpc.CallOption) (*CPU, error) {
	out := new(CPU)
	err := c.cc.Invoke(ctx, "/client.Client/GetCPU", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientClient) GetMemory(ctx context.Context, in *RequestClient, opts ...grpc.CallOption) (*Memory, error) {
	out := new(Memory)
	err := c.cc.Invoke(ctx, "/client.Client/GetMemory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientClient) GetMainBoard(ctx context.Context, in *RequestClient, opts ...grpc.CallOption) (*MainBoard, error) {
	out := new(MainBoard)
	err := c.cc.Invoke(ctx, "/client.Client/GetMainBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientClient) GetNIC(ctx context.Context, in *RequestClient, opts ...grpc.CallOption) (*NICMany, error) {
	out := new(NICMany)
	err := c.cc.Invoke(ctx, "/client.Client/GetNIC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientClient) GetDisk(ctx context.Context, in *RequestClient, opts ...grpc.CallOption) (*DiskMany, error) {
	out := new(DiskMany)
	err := c.cc.Invoke(ctx, "/client.Client/GetDisk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClientServer is the server API for Client service.
type ClientServer interface {
	GetSystem(context.Context, *RequestClient) (*System, error)
	GetCPU(context.Context, *RequestClient) (*CPU, error)
	GetMemory(context.Context, *RequestClient) (*Memory, error)
	GetMainBoard(context.Context, *RequestClient) (*MainBoard, error)
	GetNIC(context.Context, *RequestClient) (*NICMany, error)
	GetDisk(context.Context, *RequestClient) (*DiskMany, error)
}

// UnimplementedClientServer can be embedded to have forward compatible implementations.
type UnimplementedClientServer struct {
}

func (*UnimplementedClientServer) GetSystem(context.Context, *RequestClient) (*System, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSystem not implemented")
}
func (*UnimplementedClientServer) GetCPU(context.Context, *RequestClient) (*CPU, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCPU not implemented")
}
func (*UnimplementedClientServer) GetMemory(context.Context, *RequestClient) (*Memory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMemory not implemented")
}
func (*UnimplementedClientServer) GetMainBoard(context.Context, *RequestClient) (*MainBoard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMainBoard not implemented")
}
func (*UnimplementedClientServer) GetNIC(context.Context, *RequestClient) (*NICMany, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNIC not implemented")
}
func (*UnimplementedClientServer) GetDisk(context.Context, *RequestClient) (*DiskMany, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDisk not implemented")
}

func RegisterClientServer(s *grpc.Server, srv ClientServer) {
	s.RegisterService(&_Client_serviceDesc, srv)
}

func _Client_GetSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServer).GetSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.Client/GetSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServer).GetSystem(ctx, req.(*RequestClient))
	}
	return interceptor(ctx, in, info, handler)
}

func _Client_GetCPU_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServer).GetCPU(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.Client/GetCPU",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServer).GetCPU(ctx, req.(*RequestClient))
	}
	return interceptor(ctx, in, info, handler)
}

func _Client_GetMemory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServer).GetMemory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.Client/GetMemory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServer).GetMemory(ctx, req.(*RequestClient))
	}
	return interceptor(ctx, in, info, handler)
}

func _Client_GetMainBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServer).GetMainBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.Client/GetMainBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServer).GetMainBoard(ctx, req.(*RequestClient))
	}
	return interceptor(ctx, in, info, handler)
}

func _Client_GetNIC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServer).GetNIC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.Client/GetNIC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServer).GetNIC(ctx, req.(*RequestClient))
	}
	return interceptor(ctx, in, info, handler)
}

func _Client_GetDisk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServer).GetDisk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.Client/GetDisk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServer).GetDisk(ctx, req.(*RequestClient))
	}
	return interceptor(ctx, in, info, handler)
}

var _Client_serviceDesc = grpc.ServiceDesc{
	ServiceName: "client.Client",
	HandlerType: (*ClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSystem",
			Handler:    _Client_GetSystem_Handler,
		},
		{
			MethodName: "GetCPU",
			Handler:    _Client_GetCPU_Handler,
		},
		{
			MethodName: "GetMemory",
			Handler:    _Client_GetMemory_Handler,
		},
		{
			MethodName: "GetMainBoard",
			Handler:    _Client_GetMainBoard_Handler,
		},
		{
			MethodName: "GetNIC",
			Handler:    _Client_GetNIC_Handler,
		},
		{
			MethodName: "GetDisk",
			Handler:    _Client_GetDisk_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/client.proto",
}
