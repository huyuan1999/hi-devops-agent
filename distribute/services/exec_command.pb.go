// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: protobuf/exec_command.proto

// protoc --go_out=plugins=grpc:services/ protobuf/*

package services

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ShellResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Pid    uint32 `protobuf:"varint,2,opt,name=Pid,proto3" json:"Pid,omitempty"`
	Stdout string `protobuf:"bytes,3,opt,name=Stdout,proto3" json:"Stdout,omitempty"`
	Stderr string `protobuf:"bytes,4,opt,name=Stderr,proto3" json:"Stderr,omitempty"`
}

func (x *ShellResp) Reset() {
	*x = ShellResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_exec_command_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellResp) ProtoMessage() {}

func (x *ShellResp) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_exec_command_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellResp.ProtoReflect.Descriptor instead.
func (*ShellResp) Descriptor() ([]byte, []int) {
	return file_protobuf_exec_command_proto_rawDescGZIP(), []int{0}
}

func (x *ShellResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShellResp) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ShellResp) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *ShellResp) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

type OutputResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Out string `protobuf:"bytes,1,opt,name=Out,proto3" json:"Out,omitempty"`
}

func (x *OutputResp) Reset() {
	*x = OutputResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_exec_command_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputResp) ProtoMessage() {}

func (x *OutputResp) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_exec_command_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputResp.ProtoReflect.Descriptor instead.
func (*OutputResp) Descriptor() ([]byte, []int) {
	return file_protobuf_exec_command_proto_rawDescGZIP(), []int{1}
}

func (x *OutputResp) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd  string   `protobuf:"bytes,1,opt,name=Cmd,proto3" json:"Cmd,omitempty"`
	Args []string `protobuf:"bytes,2,rep,name=Args,proto3" json:"Args,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_exec_command_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_exec_command_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_protobuf_exec_command_proto_rawDescGZIP(), []int{2}
}

func (x *Command) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *Command) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

var File_protobuf_exec_command_proto protoreflect.FileDescriptor

var file_protobuf_exec_command_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65,
	0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x61, 0x0a, 0x09, 0x53,
	0x68, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x50, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x50, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x22, 0x1e,
	0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x4f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4f, 0x75, 0x74, 0x22, 0x2f,
	0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x6d, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x41,
	0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x67, 0x73, 0x32,
	0x7a, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x37, 0x0a, 0x05, 0x53, 0x68, 0x65, 0x6c, 0x6c,
	0x12, 0x15, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x17, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x39, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x2e, 0x65, 0x78, 0x65,
	0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x1a, 0x18, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0d, 0x5a, 0x0b, 0x2e,
	0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protobuf_exec_command_proto_rawDescOnce sync.Once
	file_protobuf_exec_command_proto_rawDescData = file_protobuf_exec_command_proto_rawDesc
)

func file_protobuf_exec_command_proto_rawDescGZIP() []byte {
	file_protobuf_exec_command_proto_rawDescOnce.Do(func() {
		file_protobuf_exec_command_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_exec_command_proto_rawDescData)
	})
	return file_protobuf_exec_command_proto_rawDescData
}

var file_protobuf_exec_command_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_protobuf_exec_command_proto_goTypes = []interface{}{
	(*ShellResp)(nil),  // 0: exec_command.ShellResp
	(*OutputResp)(nil), // 1: exec_command.OutputResp
	(*Command)(nil),    // 2: exec_command.Command
}
var file_protobuf_exec_command_proto_depIdxs = []int32{
	2, // 0: exec_command.Exec.Shell:input_type -> exec_command.Command
	2, // 1: exec_command.Exec.Output:input_type -> exec_command.Command
	0, // 2: exec_command.Exec.Shell:output_type -> exec_command.ShellResp
	1, // 3: exec_command.Exec.Output:output_type -> exec_command.OutputResp
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protobuf_exec_command_proto_init() }
func file_protobuf_exec_command_proto_init() {
	if File_protobuf_exec_command_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_exec_command_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_exec_command_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_exec_command_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_exec_command_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_exec_command_proto_goTypes,
		DependencyIndexes: file_protobuf_exec_command_proto_depIdxs,
		MessageInfos:      file_protobuf_exec_command_proto_msgTypes,
	}.Build()
	File_protobuf_exec_command_proto = out.File
	file_protobuf_exec_command_proto_rawDesc = nil
	file_protobuf_exec_command_proto_goTypes = nil
	file_protobuf_exec_command_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ExecClient is the client API for Exec service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExecClient interface {
	Shell(ctx context.Context, in *Command, opts ...grpc.CallOption) (*ShellResp, error)
	Output(ctx context.Context, in *Command, opts ...grpc.CallOption) (*OutputResp, error)
}

type execClient struct {
	cc grpc.ClientConnInterface
}

func NewExecClient(cc grpc.ClientConnInterface) ExecClient {
	return &execClient{cc}
}

func (c *execClient) Shell(ctx context.Context, in *Command, opts ...grpc.CallOption) (*ShellResp, error) {
	out := new(ShellResp)
	err := c.cc.Invoke(ctx, "/exec_command.Exec/Shell", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *execClient) Output(ctx context.Context, in *Command, opts ...grpc.CallOption) (*OutputResp, error) {
	out := new(OutputResp)
	err := c.cc.Invoke(ctx, "/exec_command.Exec/Output", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExecServer is the server API for Exec service.
type ExecServer interface {
	Shell(context.Context, *Command) (*ShellResp, error)
	Output(context.Context, *Command) (*OutputResp, error)
}

// UnimplementedExecServer can be embedded to have forward compatible implementations.
type UnimplementedExecServer struct {
}

func (*UnimplementedExecServer) Shell(context.Context, *Command) (*ShellResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Shell not implemented")
}
func (*UnimplementedExecServer) Output(context.Context, *Command) (*OutputResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Output not implemented")
}

func RegisterExecServer(s *grpc.Server, srv ExecServer) {
	s.RegisterService(&_Exec_serviceDesc, srv)
}

func _Exec_Shell_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Command)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecServer).Shell(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exec_command.Exec/Shell",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecServer).Shell(ctx, req.(*Command))
	}
	return interceptor(ctx, in, info, handler)
}

func _Exec_Output_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Command)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecServer).Output(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exec_command.Exec/Output",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecServer).Output(ctx, req.(*Command))
	}
	return interceptor(ctx, in, info, handler)
}

var _Exec_serviceDesc = grpc.ServiceDesc{
	ServiceName: "exec_command.Exec",
	HandlerType: (*ExecServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Shell",
			Handler:    _Exec_Shell_Handler,
		},
		{
			MethodName: "Output",
			Handler:    _Exec_Output_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/exec_command.proto",
}
